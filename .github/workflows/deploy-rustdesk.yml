name: Deploy RustDesk (Terragrunt)

on:
  pull_request:
    paths:
      - 'infra/**'
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
  workflow_dispatch:

jobs:
  plan:
    name: Terragrunt Plan
    runs-on: ubuntu-latest
    # run on PRs or when pushing to main (so apply can depend on plan)
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      # Optional Terraform variable overrides (set these as repo secrets if you need to override module inputs)
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_keys: ${{ secrets.TF_VAR_SSH_KEYS }}
      TF_VAR_region: ${{ secrets.TF_VAR_region }}
      TF_VAR_size: ${{ secrets.TF_VAR_size }}
      TF_VAR_image: ${{ secrets.TF_VAR_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.6.0'

      - name: Install Terragrunt and OpenTofu
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_version: '0.91.3'
          # If you want OpenTofu instead of Terraform, set tofu_version. We only need Terragrunt installed here.

      - name: Run Terragrunt Plan
        working-directory: infra/live/dev/rustdesk
        run: |
          terragrunt init --terragrunt-non-interactive
          # produce a binary plan (plan.tfplan) and a human-readable plan (plan.txt)
          terragrunt plan --terragrunt-non-interactive -out=plan.tfplan || true
          terragrunt plan --terragrunt-non-interactive > plan.txt || true

      - name: Upload plan artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terragrunt-plan
          path: |
            infra/live/dev/rustdesk/plan.tfplan
            infra/live/dev/rustdesk/plan.txt

  apply:
    name: Terragrunt Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
      # Optional Terraform variable overrides (set these as repo secrets if you need to override module inputs)
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      TF_VAR_ssh_keys: ${{ secrets.TF_VAR_SSH_KEYS }}
      TF_VAR_region: ${{ secrets.TF_VAR_region }}
      TF_VAR_size: ${{ secrets.TF_VAR_size }}
      TF_VAR_image: ${{ secrets.TF_VAR_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.6.0'

      - name: Install Terragrunt and OpenTofu
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_version: '0.91.3'
          # If you want OpenTofu instead of Terraform, set tofu_version. We only need Terragrunt installed here.

      - name: Terragrunt Apply
        working-directory: infra/live/dev/rustdesk
        run: |
          terragrunt init --terragrunt-non-interactive
          terragrunt apply --auto-approve --terragrunt-non-interactive

      - name: Save outputs and state
        if: always()
        working-directory: infra/live/dev/rustdesk
        run: |
          terragrunt output -json > outputs.json || true

      - name: Upload state and outputs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terragrunt-state-and-outputs
          path: |
            infra/live/dev/rustdesk/terraform.tfstate
            infra/live/dev/rustdesk/terraform.tfstate.backup
            infra/live/dev/rustdesk/outputs.json
            infra/live/dev/rustdesk/plan.txt
